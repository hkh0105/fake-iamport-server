/**
 * @packageDocumentation
 * @module api.functional.users
 */
//================================================================
import { AesPkcs5 } from "./../../__internal/AesPkcs5";
import { Fetcher } from "./../../__internal/Fetcher";
import { Primitive } from "./../../Primitive";
import type { IConnection } from "./../../IConnection";

import type { IIamportUser } from "./../../structures/IIamportUser";
import type { IIamportResponse } from "./../../structures/IIamportResponse";


/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller FakeIamportUsersController.getToken()
 * @path POST /users/getToken
 */
export function getToken
    (
        connection: IConnection,
        input: Primitive<getToken.Input>
    ): Promise<getToken.Output>
{
    return Fetcher.fetch
    (
        connection,
        getToken.CONFIG,
        getToken.METHOD,
        getToken.path(),
        input
    );
}
export namespace getToken
{
    export type Input = Primitive<IIamportUser.IAccessor>;
    export type Output = Primitive<IIamportResponse<IIamportUser>>;


    export const METHOD = "POST";
    export const PATH = "/users/getToken";
    export const CONFIG = {
        input_encrypted: false,
        output_encrypted: false,
    };

    export function path(): string
    {
        return `/users/getToken`;
    }
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
